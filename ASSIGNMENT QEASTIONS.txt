                      ===================================================================
                                            ASSIGNMENT QUEASTIONS
                      ===================================================================





 1. How to Create an Table student write an SQL Query ?

CREATE TABLE student(Rollno INT PRIMARY KEY, NAME VARCHAR(30),Branch VARCHAR(40));

---------------------------------------------------------------------------------------------------------------------

 2. How to Create a Exam table with Foreign key on rollno write a SQL Query ?

 CREATE TABLE Exam (Rollno INT,S_code VARCHAR(30),
 Marks INT,
 P_code VARCHAR(30),
 foreign key(Rollno) references student(Rollno));

---------------------------------------------------------------------------------------------------------------------
 
 3.  What is SQL Key Constraints write an Example of SQL Key Constraints ?


CREATE TABLE table_name (column1 data_type constraint,
                         column2 data_type constraint,
                         column3 data_type constraint);

 -- Unique key  ( column can not have a NULL values)
 -- Primary key ( combination of not NULL and unique )
 -- Foreign key ( connect two table for use another table record ) 

--------------------------------------------------------------------------------------------------------------------

 4.  What is SQL View Create a View of Student Table ?

  select *from exam;
  
--------------------------------------------------------------------------------------------------------------------
  
 5. How to Create a Table user write a SQL query ?

   CREATE TABLE USER (Firstname VARCHAR(20),Lastname VARCHAR(20),address VARCHAR(50),city VARCHAR(30),age INT);
   
-------------------------------------------------------------------------------------------------------------------
   
 6.  What is SQL and How to Create a table with Forign Key ?

    CREATE TABLE Exam (Rollno INT,S_code VARCHAR(30),
 Marks INT,
 P_code VARCHAR(30),
 foreign key(Rollno) references student(Rollno));

--------------------------------------------------------------------------------------------------------------------

7 What is store Proceedure write a query of creating store Proceedure ?

DELIMITER $$

CREATE 

   procedure procedure_name ()
   
   BEGIN

      select *from table_name where id=100;  -- (ENTER YOUR TABLE ID NUMBER) 

   END $$

DELIMITER ;

------------------------------------------------------------------------------------------------------------------------

8 What is save Point How to Create a save Point write a Query ?

START TRANSACTION;
 
 delete from table_name where id=2    -- (ENTER YOUR TABLE ID)

savepoint a;

update name='rahul' from table_name where id = 3;

rollback;

--------------------------------------------------------------------------------------------------------------------------

9 What is trigger and how to Create a Trigger in SQL ?

create 

   trigger `database_name`.`update_name` before delete

            on `database_name`.`table_name`
         
         for each row begin 

            insert into new_table_name(id,name,email) values (old.id,old.name, old.email);

         end $$ 

-----------------------------------------------------------------------------------------------------------------------------


14 What is DDL Interpreter ?


THE DDL COMMANDS ARE:
     1. CREATE DATABASE
     2. ALTER TABLE
     3. DROP TABLE OR DATABASE
     4. TRUNCATE TABLE

====================================================================================================================================================

I1. Get First_Name from employee table using alias name “Employee Name”.

select first_name as employee_name from employee; 

--------------------------------------------------------------------------------------------------------------------------------------------

I2. Get FIRST_NAME, Joining year, Joining Month and Joining Date from employee table.

select first_name , year (joining_year),month(joining_month),date(joining_date) from table_name;

-------------------------------------------------------------------------------------------------------------------------------------------------

I3. Get all employee details from the employee table order by First_Name Ascending and Salary descending.

select *from employee order by First_name;
select *fron employee order by salary desc;

-----------------------------------------------------------------------------------------------------------------------------------------------

I4 Get employee details from employee table whose first name contains ‘o’.

select *from employee where name like '%o%';

-----------------------------------------------------------------------------------------------------------------------------------------------

I5. Get employee details from employee table whose joining month is “January”. 

select *from employee where month = 'january'(joining_month);

-----------------------------------------------------------------------------------------------------------------------------------------------

I6. Get department, total salary with respect to a department from employee table order by total salary descending.

select department,sum(salary) total_salary from employee group by department order by total_salary desc;

-------------------------------------------------------------------------------------------------------------------------------------------------

I7. Get department wise maximum salary from employee table order by salary ascending

select department ,max(salary) max_salary from employee group by department order by max_salary; 

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

I8. Select first_name, incentive amount from employee and incentives table for those employees who have incentives and incentive amount greater than 3000

select first_name,incentive_amount from employee inner join incentive on employee_id=employee_ref_id where incentive_amount > 3000;

-------------------------------------------------------------------------------------------------------------------------------------------------

I9 Select 2nd Highest salary from employee table.

select max(salary) from employee where salary < (select max(salary) from employee );

---------------------------------------------------------------------------------------------------------------------------------------------------------------

I10 Select first_name, incentive amount from employee and incentives table for all employees who got incentives using left join.

select employee.first_name,incentive.incentive_ammount from employee left join incentive i on i.employee_ref_id = e.employee_id;

---------------------------------------------------------------------------------------------------------------------------------------------------

I11. Create View OF Employee table in which store first name ,last name and salary only.


create view Emp_detail as 
                
                select first_name,last_name,slaary from employee;

 -----------------------------------------------------------------------------------------------------------------------------------------------
               
I12 Create Procedure to find out department wise highest salary.
            
CREATE PROCEDURE max_salary ()
BEGIN
select department, max(salary) from employee group by department
END
--------------------------------------------------------------------------------------------------------------------------------------------------

I13. Create After Insert trigger on Employee table which insert records in view table.
                
delimiter $$

create 
      trigger update after insert
      on stundents
      for each row begin
         insert into new_table_name (id,name,email) values (old.id,old.name,old.email);
      end$$
      
      delimiter;

================================================================================================================================================================


A1 All orders for more than $1000.

select *from table_name where amount>$1000;

------------------------------------------------------------------------------------------------------------------------------------------

A2 Names and cities of all salespeople in London with commission above 0.10.

select sname,city from table_name where comm >0.10 and city='london' ;

--------------------------------------------------------------------------------------------------------------------------------------------

A8. All salespeople either in Barcelona or in London.

select  *from salesperson where city in ('barcelona','lonodn');

----------------------------------------------------------------------------------------------------------------------------------------------

A9. All salespeople with commission between 0.10 and 0.12. (Boundary values shouldbe excluded).
 
select *from salesperson where comm between o.12 and 0.12;
      
---------------------------------------------------------------------------------------------------------------------------------------------

A10. All customers excluding those with rating <= 100 unless they are located in Rome.
      
select *from customer where rating  <=100 or  city ='rome';

--------------------------------------------------------------------------------------------------------------------------------------------------------

A11 All orders except those with 0 or NULL value in amt field.      
      
select *from orders where amt!=0 or ant = not null;      

-----------------------------------------------------------------------------------------------------------------------------------------------
      
A12 Count the number of salespeople currently listing orders in the order table.      
                
select count(distinct sno) from orders;                

-------------------------------------------------------------------------------------------------------------------------------------------------------------
                
A13 Largest order taken by each salesperson, datewise.
                
select max(amt) from orders group by ODE,sno order by ODE, sno;                
                
-------------------------------------------------------------------------------------------------------------------------------------------------------------------

A14 Largest order taken by each salesperson with order value more than $3000. (ie same city).
    
select max(amt) from orders where amt >3000; 


=======================================================================================================================================================